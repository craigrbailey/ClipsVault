<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings</title>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.10.1/css/all.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
        integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/base.css">
    <link rel="stylesheet" href="/css/settings.css">
</head>

<body>
    <%- include('menu.ejs') %>
        <div class="main-interface">
            <div class="settings-container">
                <div class="settings">
                    <h2>General</h2>
                    <span>General Settings</span>
                    <div class="setting">
                        <div>
                            <h3>Live Required</h3>
                            <span>Does OBS need to be live to track the recording</span>
                        </div>
                        <label class="switch">
                            <input id="liveRequired" type="checkbox">
                            <span class="slider"></span>
                        </label>
                    </div>

                    <div class="setting">
                        <label for="cleanup-time">Cleanup Time:</label>
                        <select id="cleanup-time">
                            <option value="1">1 hour</option>
                            <option value="2">2 hours</option>
                            <option value="3">3 hours</option>
                        </select>
                    </div>

                    <div class="setting">
                        <label for="platform">Platform:</label>
                        <select id="platform">
                            <option value="twitch">Twitch</option>
                            <option value="youtube">YouTube</option>
                        </select>
                    </div>
                    <div class="settings api-key-container">
                        <input type="text" id="api-key-input" value=<%=apiKey %> readonly>
                        <button id="new-api-key">
                            <i class="fa-solid fa-sync"></i>
                        </button>
                        <button class="copy-api-key-button">
                            Copy
                        </button>
                    </div>
                </div>
                <div class="settings">
                    <h2>OBS Connection</h2>
                    <span>Connection To OBS or Streamlabs OBS is WebSocket Server</span>
                    <form>
                        <label for="host">Host:</label>
                        <input class="settings-input" type="text" id="host" name="host"><br><br>
                        <label for="port">Port:</label>
                        <input class="settings-input" type="text" id="port" name="port"><br><br>
                        <label for="password">Password:</label>
                        <input class="settings-input" type="password" id="password" name="password"><br><br>
                        <button id="obs-button" type="submit"></button>
                    </form>
                </div>
                <div class="settings">
                    <h2>Notifications</h2>
                    <span>Configure Notification Settings</span>
                    <div class="notification-toggle">
                        <div>
                            <h3 class="notification-app">Discord</h3>
                            <label class="switch">
                                <input type="checkbox">
                                <span class="slider"></span>
                            </label>
                        </div>
                        <div>
                            <form id="discord-form">
                                <label for="webhook">Discord Webhook:</label>
                                <input class="settings-input" type="text" id="webhook" name="webhook"
                                    placeholder="Paste webhook here..." value="<%= discordWebhookURL %>"><br><br>
                                <button id="submit-button" type="submit">Submit</button>
                            </form>
                        </div>
                    </div>
                    <div class="notification-toggle">
                        <div>
                            <h3 class="notification-app">GMAIL</h3>
                            <label class="switch">
                                <input type="checkbox">
                                <span class="slider"></span>
                            </label>
                        </div>
                        <div>
                            <form>
                                <label for="webhook">Port:</label>
                                <input class="settings-input" type="text" id="webhook" name="webhook"><br><br>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="settings">
                    <h2>Connections</h2>
                    <div id="connection-links">
                        <a id="connect-with-twitch" href="/authorize">Authorize with Twitch</a>
                        <a id="connect-to-youtube">Connect to YouTube</a>
                    </div>
                </div>
                <div class="settings">
                    <h2>Support The Project</h2>
                    <span>If you've enjoyed using the app consider checking out my socials</span>
                    <div>
                        <div class="discord-join">
                            <h3>Join Our Discord Server!</h3>
                            <p>Click the button below to join our Discord server and chat with other members.</p>
                            <a href="https://discord.gg/yourserverinvite" target="_blank" class="discord-button">Join
                                Server</a>
                        </div>
                        <div class="twitch-follow">
                            <img src="https://static-cdn.jtvnw.net/jtv_user_pictures/074e7c92-b08a-4e6b-a1c2-4e28eade69c0-profile_image-70x70.png"
                                alt="Profile Picture" class="profile-image">
                            <h3>Follow Me on Twitch!</h3>
                            <p>Click the button below to follow me on Twitch and stay up-to-date with my streams.</p>
                            <a href="https://www.twitch.tv/dadthegam3r" target="_blank" class="twitch-button">Follow</a>
                        </div>
                        <div class="twitter-follow">
                            <h3>Follow Me on Twitter!</h3>
                            <p>Click the button below to follow me on Twitter and stay up-to-date with my tweets.</p>
                            <a href="https://twitter.com/yourusername" target="_blank" class="twitter-button">Follow</a>
                        </div>
                        <div class="buy-me-a-coffee">
                            <h3>Buy Me a Coffee</h3>
                            <p>Click the button below to support me on Buy Me a Coffee.</p>
                            <a href="https://www.buymeacoffee.com/yourusername" target="_blank"
                                class="coffee-button">Buy Me a Coffee</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>
        <script src="/js/base.js"></script>
        <script src="/js/settings.js"></script>
        <script>    var currentPage = window.location.href;
            var menuLinks = document.getElementsByClassName('menu-link');
            for (var i = 0; i < menuLinks.length; i++) {
                var link = menuLinks[i];
                if (currentPage.includes('settings') && link.textContent === 'Settings') {
                    link.classList.add('selected');
                }
            }
            const copyApiKeyButton = document.querySelector('.copy-api-key-button');
            const discordForm = document.getElementById('discord-form');
            const webhookInput = document.getElementById('webhook');
            const serverapiKey = '<%= serverKey %>';
            const newApiKeyButton = document.getElementById('new-api-key');

            newApiKeyButton.addEventListener('click', updateApiKey);

            discordForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const webhookUrl = webhookInput.value;
                if (isValidUrl(webhookUrl)) {
                    const body = {
                        setting: 'discord',
                        value: webhookUrl,
                    };
                    fetch('/settings', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(body),
                    })
                        .then((response) => response.json())
                        .then((data) => {
                            console.log(data);
                        })
                        .catch((error) => {
                            console.error('Error:', error);
                        });
                } else {
                    console.log('Invalid webhook URL');
                }
            });
            copyApiKeyButton.addEventListener('click', copyApiKey);
            function copyApiKey() {
                const apiKeyInput = document.getElementById('api-key-input');
                apiKeyInput.select();
                document.execCommand('copy');
            }

            function isValidUrl(url) {
                const urlPattern = /^(https?:\/\/)?([\w.-]+)\.([a-zA-Z]{2,6})(\/[\w.-]*)*\/?$/;
                return urlPattern.test(url);
            }

            async function updateApiKey(apiKey) {
                try {
                    const response = await fetch('/api/settings', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'x-api-key': serverapiKey,
                        },
                        body: JSON.stringify({ setting: 'apikey'})
                    });

                    if (response.ok) {
                        const data = await response.json();
                        const apiKeyInput = document.getElementById('api-key-input');
                        apiKeyInput.value = data.apiKey;
                        console.log('API key updated successfully');
                    } else {
                        console.error('Failed to update API key');
                    }
                } catch (error) {
                    console.error('Error updating API key:', error);
                }
            }
        </script>
</body>

</html>