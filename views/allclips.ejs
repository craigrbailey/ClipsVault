<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Clips Vault - Clips</title>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.10.1/css/all.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
        integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/base.css" />
    <link rel="stylesheet" href="/css/clips.css" />
    <link rel="stylesheet" href="/css/loader.css">
    <link rel="icon" href="/images/iconLogo.png" />
</head>

<body>
    <%- include('menu.ejs') %>
        <section>
            <div class="main-interface">
                <div class="wrapper">
                    <div class="circle"></div>
                    <div class="circle"></div>
                    <div class="circle"></div>
                    <div class="shadow"></div>
                    <div class="shadow"></div>
                    <div class="shadow"></div>
                </div>
                <div class="search-form">
                    <form action="search">
                        <h1>Search</h1>
                        <div class="tags-search">
                            <label for="from-date">Tags:</label>
                            <div class="tags-search-container">
                                <div class="tags-list">
                                </div>
                                <div class="tag-search-input">
                                    <i class="fa-solid fa-search"></i>
                                    <input type="text" name="search" id="searchTagInput" placeholder="Search tags..." />
                                </div>
                            </div>
                        </div>
                        <div class="category-search">
                            <label for="from-date">Category:</label>
                            <div class="category-dropdown">
                                <select name="" id="">
                                    <option value="All">All</option>
                                    <% categories.forEach(category=> { %>
                                        <option value="<%= category %>">
                                            <%= category %>
                                        </option>
                                        <% }) %>
                                </select>
                            </div>
                        </div>
                        <div class="date-search">
                            <label for="from-date">From:</label>
                            <input type="date" name="from-date" id="from-date" />
                        </div>
                        <div class="date-search">
                            <label for="to-date">To:</label>
                            <input type="date" name="to-date" id="to-date" />
                        </div>
                        <div class="favorite-selector toggle-switch">
                            <label for="switch">Favorite</label>
                            <label class="switch">
                                <input id="favorite" type="checkbox">
                                <span class="slider"></span>
                            </label>
                        </div>
                        <div class="entire-stream-selector toggle-switch">
                            <label for="switch">Entire Stream</label>
                            <label class="switch">
                                <input id="favorite" type="checkbox">
                                <span class="slider"></span>
                            </label>
                        </div>
                    </form>
                </div>
                <div class="clips-interface">
                </div>
        </section>
        <script>
            let currentPageNumber = 1;
            const pageSize = 20;
            const videos = document.querySelectorAll('.clip video');
            const categoryDropdown = document.querySelector('.category-dropdown-menu');
            const dropdownSelectorText = document.querySelector('.category-dropdown-selector-text');
            const dropdownOptions = document.querySelectorAll('.category-dropdown-menu li');
            const searchDiv = document.querySelector('.wrapper');
            const clips = document.querySelectorAll('.clip');
            const closeIcons = document.querySelectorAll('.fa-circle-xmark');
            const form = document.querySelector('.search-form');
            const toDateInput = document.getElementById('to-date');
            const today = new Date().toISOString().split('T')[0];
            const searchTagInput = document.getElementById('searchTagInput');
            const tagsList = document.querySelector('.tags-list');
            toDateInput.value = today;
            var menuLinks = document.getElementsByClassName('menu-link');
            for (var i = 0; i < menuLinks.length; i++) {
                var link = menuLinks[i];
                if (link.textContent === 'Clips') {
                    link.classList.add('selected');
                }
            }

            document.addEventListener('DOMContentLoaded', async () => {
                let currentPageNumber = 1;
                const pageSize = 10;
                loadMoreData();
            });

            window.onscroll = function () {
                if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {
                    loadMoreData();
                }
            };

            function loadMoreData() {
                fetch(`/api/clip?page=${currentPageNumber}&size=${pageSize}`)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                        let clipsInterface = document.querySelector('.clips-interface');
                        console.log(clipsInterface);
                        data.forEach((video, index) => {
                            // Check if an element with the same video id exists in the DOM
                            if (!document.querySelector(`.clip[data-id='${video._id}']`)) {
                                let div = document.createElement('div');
                                div.classList.add('clip');
                                div.dataset.id = video._id;
                                div.style.animationDelay = `${index * 0.2}s`;
                                let innerHTML = `
                        <div class="video-container">
                            <img class="clip-image" src="${video.categoryImg}" alt="">
                            <video src="${video.file}"></video>
                            <span class="clip-duration">
                                ${video.length}
                            </span>
                        </div>`;

                                div.innerHTML = innerHTML;

                                // Add an event listener to go to /video${videoId} page
                                div.addEventListener('click', function () {
                                    window.location.href = `/video?videoId=${video._id}`;
                                });
                                div.addEventListener('mouseenter', () => {
                                    div.querySelector('video').setAttribute('controls', 'controls');
                                    div.querySelector('video').play();
                                });
                                div.addEventListener('mouseleave', () => {
                                    div.querySelector('video').removeAttribute('controls');
                                    div.querySelector('video').pause();
                                });
                                clipsInterface.appendChild(div);
                            }
                        });
                        currentPageNumber++;
                    });
            }




            tagsList.addEventListener('click', (event) => {
                if (event.target.classList.contains('fa-circle-xmark')) {
                    const span = event.target.parentNode;
                    span.remove();
                    searchClips();
                }
            });

            videos.forEach(video => {
                video.addEventListener('mouseenter', () => {
                    video.setAttribute('controls', 'controls');
                    video.play();
                });

                video.addEventListener('mouseleave', () => {
                    video.removeAttribute('controls');
                    video.pause();
                });
            });

            searchTagInput.addEventListener('keydown', (event) => {
                if (event.keyCode === 13) {
                    event.preventDefault();
                    const newTag = searchTagInput.value.trim();
                    if (newTag !== '') {
                        addTag(newTag);
                        searchTagInput.value = '';
                        searchClips();
                    }
                }
            });

            clips.forEach(clip => {
                clip.addEventListener('click', () => {
                    const videoId = clip.dataset.id;
                    window.location.href = `/video?videoId=${videoId}`;
                });
            });

            form.addEventListener('change', searchClips);

            function createVideoClipDiv(video) {
                const div = document.createElement('div');
                div.classList.add('clip');
                div.dataset.id = video._id;
                div.addEventListener('click', () => {
                    window.location.href = `/video?videoId=${video._id}`;
                });
                const link = document.createElement('a');
                link.href = `/video?videoId=${video._id}`;
                div.appendChild(link);
                const videoContainer = document.createElement('div');
                videoContainer.classList.add('video-container');
                link.appendChild(videoContainer);
                const videoElement = document.createElement('video');
                videoElement.src = video.file;
                videoElement.controls = true;
                videoElement.addEventListener('mouseenter', () => {
                    videoElement.setAttribute('controls', 'controls');
                    videoElement.play();
                });
                videoElement.addEventListener('mouseleave', () => {
                    videoElement.removeAttribute('controls');
                    videoElement.pause();
                });
                videoContainer.appendChild(videoElement);
                const durationSpan = document.createElement('span');
                durationSpan.classList.add('clip-duration');
                durationSpan.textContent = video.length;
                videoContainer.appendChild(durationSpan);
                const image = document.createElement('img');
                image.classList.add('clip-image');
                image.src = video.categoryImg;
                videoContainer.appendChild(image);
                return div;
            }

            function addTag(tag) {
                const tagsList = document.querySelector('.tags-list');
                const tagSpan = document.createElement('span');
                tagSpan.textContent = tag;
                const closeIcon = document.createElement('i');
                closeIcon.classList.add('fa-solid', 'fa-circle-xmark');
                tagSpan.appendChild(closeIcon);
                tagsList.appendChild(tagSpan);

                closeIcon.addEventListener('click', () => {
                    tagSpan.remove();
                });
            }

            function searchClips() {
                const tags = Array.from(document.querySelectorAll('.tags-list span')).map(span => {
                    const tagText = span.textContent.replace(span.querySelector('i').outerHTML, '');
                    return tagText.trim();
                });
                const category = document.querySelector('.category-dropdown select').value;
                const from = document.getElementById('from-date').value;
                const to = document.getElementById('to-date').value;
                const favorite = document.getElementById('favorite').checked;
                searchDiv.classList.add('show');
                const body = {
                    tags: tags,
                    category: category,
                    from: from,
                    to: to,
                    favorite: favorite
                };
                fetch('/api/searchclips', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                })
                    .then(response => response.json())
                    .then(data => {
                        const clipsInterface = document.querySelector('.clips-interface');
                        clipsInterface.innerHTML = '';
                        searchDiv.classList.remove('show');
                        data.forEach(video => {
                            const clipDiv = createVideoClipDiv(video);
                            clipsInterface.appendChild(clipDiv);
                        });
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        </script>
</body>

</html>